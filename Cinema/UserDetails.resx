<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>